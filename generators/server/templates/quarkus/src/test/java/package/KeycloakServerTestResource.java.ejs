<%#
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
package <%=packageName%>;

import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.testcontainers.containers.BindMode;
import org.testcontainers.containers.GenericContainer;
import org.testcontainers.containers.wait.strategy.Wait;

import java.util.Collections;
import java.util.Map;

public class KeycloakServerTestResource implements QuarkusTestResourceLifecycleManager {

    private final Logger log = LoggerFactory.getLogger(KeycloakServerTestResource.class);


    public GenericContainer keycloak;

    @Override
    public Map<String, String> start() {
        try {
            keycloak = new KeycloakContainer("jboss/keycloak:latest");
            keycloak.start();
            System.out.println("[INFO] Keycloack server started in TCP server mode");

        } catch (Exception e) {
            log.error("Failed to start Keycloak container: {}", e.getMessage());
        }
        return Collections.emptyMap();
    }

    @Override
    public void stop() {
        keycloak.stop();
        System.out.println("[INFO] Keycloak server was shut down");
    }

    public static class KeycloakContainer extends GenericContainer<KeycloakContainer> {

        public static final int KEYCLOAK_PORT = 8180;

        public KeycloakContainer(String image) {
            super(image);
            addFixedExposedPort(KEYCLOAK_PORT, 8080);
            addEnv("DB_VENDOR", "H2");
            addEnv("KEYCLOAK_USER", "admin");
            addEnv("KEYCLOAK_PASSWORD", "admin");
            addEnv("JAVA_OPTS", "-Dkeycloak.profile.feature.upload_scripts=enabled");
            addEnv("KEYCLOAK_IMPORT", "/tmp/realm.json");
            // JHipster Test Realm grants client direct access for testing purpose
            withClasspathResourceMapping("jhipster-test-realm.json", "/tmp/realm.json", BindMode.READ_ONLY);
            waitingFor(Wait.forHttp("/auth"));
        }
    }
}
